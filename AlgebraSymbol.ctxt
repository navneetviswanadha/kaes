#BlueJ class context
comment0.target=AlgebraSymbol
comment0.text=\ Revision\ History\r\n\ 31/10\ MF\ Changed\ System.out.println\ to\ Debug.prout(1,M).\r\n\ 5/29\ DR\ added\ test\ "if\ (this.theSymbol.equals(""))\ return\ this;"\ to\ procedure\ getReciprocal()\r\n\ 9/24\ DR\ added\ else\ ft\ \=\ null;\ to\ getSexMatchingFocalTerm();\ added\ getReciprocal(AlgebraSymbol\ ft);\r\n\ 9/28\ DR\ added\ added\ getReciprocal(String\ sex);\r\n\ added\ procedure\ getOppositeSexGenerator()\ to\ get\ generator\ with\ opposite\ sex\ to\ this\r\n\ 10/12\ DR\ added\ procedure\ isZeroElement()\r\n\ 10/22\ DR\ added\ procedure\ isSexGenerator()\r\n
comment1.params=
comment1.target=java.lang.String\ toXML()
comment10.params=
comment10.target=java.lang.String\ getValue()
comment10.text=\ get\ the\ value\ assigned\ to\ this\ algebra\ symbol\r\n\ @return\ the\ value\r\n
comment11.params=s
comment11.target=java.lang.String\ getValue(AlgebraSymbol)
comment11.text=\ get\ the\ value\ of\ an\ algebra\ symbol\r\n\ @param\ s\ the\ algebra\ symbol\ to\ return\ value/name\ of\r\n\ @return\ the\ value\r\n
comment12.params=
comment12.target=void\ unBind()
comment12.text=\ AlgebraSymbols\ are\ always\ bound\ ...\ default\ method\ does\ nothing\r\n\ @see\ AlgebraSymbolVar\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\ returns\ value/name\ as\ string\r\n
comment14.params=
comment14.target=AlgebraSymbol\ getAlgebraSymbol()
comment14.text=\ return\ this\ ...\ rather\ reflexive\ to\ accomodate\ unbound\ AlgebraSymbolVars\r\n\ @see\ AlgebraSymbolvar\r\n\ @return\ name/value\r\n
comment15.params=
comment15.target=boolean\ isIdentityElement()
comment15.text=\ tests\ if\ this\ is\ identity\ element\r\n\ @return\ true\ if\ identity\ element\r\n
comment16.params=
comment16.target=boolean\ isZeroElement()
comment16.text=\ tests\ if\ this\ is\ zero\ element\r\n\ @return\ true\ if\ zero\ element\r\n
comment17.params=
comment17.target=boolean\ isSexGenerator()
comment17.text=\ tests\ if\ this\ is\ sex\ generator\r\n\ @return\ true\ if\ sex\ generator\r\n
comment18.params=
comment18.target=boolean\ isSibGenerator()
comment18.text=\ tests\ if\ this\ is\ sib\ generator\r\n\ @return\ true\ if\ sib\ generator\r\n
comment19.params=
comment19.target=void\ setIdentityElement()
comment19.text=\ sets\ this\ to\ be\ identity\ element\r\n
comment2.params=s
comment2.target=AlgebraSymbol(java.lang.String)
comment2.text=\ define\ a\ new\ AlgebraSymbol\r\n\ @param\ s\ the\ value\ to\ assign\ to\ the\ AlgebraSymbol\r\n\ @return\ the\ new\ AlgebraSymbol\r\n
comment20.params=
comment20.target=boolean\ isFocalElement()
comment20.text=\ tests\ if\ this\ is\ afocal\ element\r\n\ @return\ true\ if\ a\ focal\ element\r\n
comment21.params=a
comment21.target=void\ setFocalElement(boolean)
comment22.params=
comment22.target=boolean\ isSelfReciprocal()
comment22.text=\ tests\ if\ this\ is\ self-reciprocal\r\n\ @return\ true\ if\ this\ is\ self-reciprocal\r\n
comment23.params=a
comment23.target=void\ setEquated(AlgebraSymbol)
comment23.text=\ equate\ two\ algebra\ symbols\r\n\ @param\ a\ the\ algebra\ symbol\ to\ equate\ to\r\n
comment24.params=a\ e
comment24.target=void\ setEquated(AlgebraSymbol,\ AlgebraSymbol)
comment24.text=\ equate\ two\ algebra\ symbols\r\n\ @param\ a\ the\ algebra\ symbol\ to\ equate\ to\r\n\ @param\ e\ ???the\ algebra\ symbol\ to\ cover\ this\ and\ a\ as\ bifurcated\ terms\r\n
comment25.params=
comment25.target=AlgebraSymbolVector\ getEquated()
comment25.text=\ get\ the\ set\ of\ equated\ algebra\ symbols\r\n\ @return\ the\ set\ of\ equated\ algebra\ symbols\r\n
comment26.params=a\ e
comment26.target=void\ setBifurcated(AlgebraSymbol,\ AlgebraSymbol)
comment26.text=\ set\ two\ algebra\ symbols\ that\ this\ symbol\ will\ cover\r\n\ @see\ getBifurcated()\r\n\ @param\ a\ symbol\ at\ return\ array\ position\ 0\r\n\ @param\ e\ symbol\ at\ return\ array\ position\ 1\r\n
comment27.params=
comment27.target=AlgebraSymbol[]\ getBifurcated()
comment27.text=\ return\ an\ array\ of\ two\ Algebra\ symbols\ that\ are\ covered\ by\ this\ term,\ if\ any\r\n\ @return\ AlgebraSymbol[0..1]\r\n\ 0\ \=\ first\ symbol,\ 1\ \=\ second\ symbol\r\n\ @see\ setBifurcated();\r\n
comment28.params=e
comment28.target=void\ addLhs(Equation)
comment28.text=\ add\ equation\ to\ list\ of\ equations\ we\ appear\ in\ the\ LHS\ of\r\n\ @param\ e\ the\ equation\ to\ add\r\n
comment29.params=e
comment29.target=void\ addRhs(Equation)
comment29.text=\ add\ equation\ to\ list\ of\ equations\ we\ appear\ in\ the\ RHS\ of\r\n\ @param\ e\ the\ equation\ to\ add\r\n
comment3.params=
comment3.target=AlgebraSymbol()
comment3.text=\ define\ a\ new\ AlgebraSymbol\r\n\ @return\ the\ new\ AlgebraSymbol\r\n
comment30.params=
comment30.target=boolean\ isGenerator()
comment30.text=\ is\ this\ a\ generator\r\n\ @return\ true\ if\ generator\r\n
comment31.params=
comment31.target=int\ getGenerator()
comment31.text=\ get\ ordinal\ position\ of\ generator\r\n\ @return\ ordinal\ value\ of\ generator,\ 0\ if\ not\ a\ generator\r\n
comment32.params=
comment32.target=java.lang.String\ getSymbolType()
comment32.text=\ get\ the\ type\ of\ this\ symbol\r\n\ @return\ the\ type\ as\ String\r\n
comment33.params=n
comment33.target=void\ setGenerator(int)
comment33.text=\ set\ the\ ordinal\ value\ of\ this\ as\ a\ generator\r\n\ @param\ the\ ordinal\ value\ of\ generator\r\n
comment34.params=
comment34.target=AlgebraSymbol\ getSexMatchingFocalTerm()
comment34.text=\ get\ the\ focal\ term\ with\ same\ sex\ as\ a\ generator\r\n\ @return\ the\ focal\ term\ with\ the\ same\ sex\ if\ any\ (???\ if\ no\ focal\ term)\r\n
comment35.params=sex
comment35.target=AlgebraSymbol\ getReciprocal(java.lang.String)
comment35.text=\ get\ the\ reciprocal\ of\ this\ symbol\ based\ on\ sex\r\n\ @param\ the\ focal\ term\r\n\ @return\ the\ reciprocal\ if\ any\ (???\ if\ no\ reciprocal)\r\n
comment36.params=ft
comment36.target=AlgebraSymbol\ getReciprocal(AlgebraSymbol)
comment36.text=\ get\ the\ reciprocal\ of\ this\ symbol\ based\ on\ sex\ of\ focal\ term\r\n\ @param\ the\ focal\ term\r\n\ @return\ the\ reciprocal\ if\ any\ (???\ if\ no\ reciprocal)\r\n
comment37.params=
comment37.target=AlgebraSymbol\ getReciprocal()
comment37.text=\ get\ the\ reciprocal\ of\ this\ symbol\r\n\ @return\ the\ reciprocal\ if\ any\ (???\ if\ no\ reciprocal)\r\n
comment38.params=r
comment38.target=void\ setReciprocal(AlgebraSymbol)
comment38.text=\ set\ the\ reciprocal\ of\ this\ symbol\r\n\ @param\ the\ reciprocal\ symbol\r\n
comment39.params=a
comment39.target=AlgebraSymbolVector\ getProductOLd(AlgebraSymbolVector)
comment39.text=\ get\ the\ product\ of\ this\ symbol\ with\ a\ list\ of\ symbols\r\n\ @param\ a\ the\ list\ of\ symbols\r\n\ @return\ the\ product\ list\r\n
comment4.params=x
comment4.target=boolean\ equals(java.lang.Object)
comment4.text=\ compares\ the\ value\ of\ two\ Algebra\ symbols\ based\ on\ value/name\ only\r\n\ @param\ x\ algebra\ symbol\ to\ compare\ to\r\n\ @return\ true\ or\ false\r\n
comment40.params=a
comment40.target=AlgebraSymbolVector\ getProduct(AlgebraSymbolVector)
comment41.params=a
comment41.target=AlgebraSymbolVector\ getProductLR(AlgebraSymbolVector)
comment41.text=\ get\ the\ product\ of\ this\ symbol\ with\ a\ list\ of\ symbols\ by\ adding\ to\ front\r\n\ @param\ a\ the\ list\ of\ symbols\r\n\ @return\ the\ product\ list\r\n
comment42.params=
comment42.target=AlgebraSymbol\ makeClone()
comment42.text=\ clone\ this\ symbol\r\n\ @return\ a\ clone\ of\ this\ symbol\r\n
comment43.params=a
comment43.target=int\ getArrowType(Algebra)
comment44.params=
comment44.target=int\ getArrowType()
comment45.params=
comment45.target=int\ getArrowTypex()
comment46.params=
comment46.target=AlgebraSymbol\ getOppositeSexGenerator()
comment46.text=\ get\ the\ generator\ in\ same\ direction\ but\ of\ opposite\ sex\r\n\ @return\ the\ opposite\ sex\ generator\r\n
comment47.params=a
comment47.target=AlgebraSymbol\ getOppositeSexGenerator(Algebra)
comment47.text=\ get\ the\ generator\ in\ same\ direction\ but\ of\ opposite\ sex\r\n\ @a\ algebra\ with\ the\ opposite\ sex\ generator\r\n\ @return\ the\ opposite\ sex\ generator\r\n
comment48.params=a\ a1
comment48.target=AlgebraSymbol\ getOppositeSexGenerator(Algebra,\ Algebra)
comment49.params=
comment49.target=int\ getOppositeArrow()
comment49.text=\ get\ the\ arrow\ in\ opposite\ direction\r\n\ @return\ the\ opposite\ arrow\r\n
comment5.params=sex
comment5.target=void\ setSex(java.lang.String)
comment5.text=\ set\ the\ sex\ of\ this\ algebra\ symbol\r\n
comment50.params=
comment50.target=AlgebraSymbol\ getOppositeArrowSameSexGenerator()
comment50.text=\ get\ the\ generator\ in\ opposite\ direction\ but\ of\ same\ sex\r\n\ @return\ the\ opposite\ arrow\ generator\r\n
comment6.params=
comment6.target=java.lang.String\ getSex()
comment6.text=\ get\ the\ sex\ of\ this\ algebra\ symbol\r\n\ @return\ the\ sex\r\n
comment7.params=
comment7.target=java.lang.String\ getOppositeSex()
comment8.params=aType
comment8.target=void\ setArrowType(int)
comment8.text=\ set\ the\ arrowType\ of\ this\ algebra\ symbol\r\n
comment9.params=s
comment9.target=void\ setValue(java.lang.String)
comment9.text=\ set\ the\ value\ of\ this\ algebra\ symbol\ to\ a\ name\r\n
numComments=51
