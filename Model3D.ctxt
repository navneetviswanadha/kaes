#BlueJ class context
comment0.target=Model3D
comment0.text=The\ representation\ of\ a\ 3D\ model
comment1.params=
comment1.target=Model3D()
comment10.params=s
comment10.target=void\ setColor(java.awt.Color)
comment10.text=\ sets\ last\ vertice\ set\ to\ colour\ s\n
comment11.params=x\ y\ z\ s
comment11.target=int\ setPoint(float,\ float,\ float,\ java.lang.String)
comment11.text=\ A\ host\ of\ setPoints\n\ see\ fully\ qualified\ definition\n
comment12.params=x\ y\ z\ s\ r
comment12.target=int\ setPoint(float,\ float,\ float,\ java.lang.String,\ int)
comment13.params=x\ y\ z\ s\ c
comment13.target=int\ setPoint(float,\ float,\ float,\ java.lang.String,\ java.awt.Color)
comment14.params=x\ y\ z\ s\ c\ r
comment14.target=int\ setPoint(float,\ float,\ float,\ java.lang.String,\ java.awt.Color,\ int)
comment14.text=\ Sets\ an\ x,y,z\ point\ if\ dimension\ flags\ are\ set\ (or\ implied)\n\t@param\ x\ x\ coordinate\n\t@param\ y\ y\ coordinate\n\t@param\ z\ z\ coordinate\n\t@param\ s\ label\ for\ point\n\t@param\ c\ colour\ for\ point\n\t@param\ r\ radius\ or\ chunkiness\ of\ point\n
comment15.params=x\ y\ z
comment15.target=int\ setPoint(float,\ float,\ float)
comment16.params=x\ y\ z\ r
comment16.target=int\ setPoint(float,\ float,\ float,\ int)
comment17.params=x\ y\ z\ c
comment17.target=int\ setPoint(float,\ float,\ float,\ java.awt.Color)
comment18.params=x\ y\ z\ c\ r
comment18.target=int\ setPoint(float,\ float,\ float,\ java.awt.Color,\ int)
comment19.params=x\ y\ z\ s\ c\ linetype\ split
comment19.target=void\ connectPoint(float,\ float,\ float,\ java.lang.String,\ java.awt.Color,\ java.lang.Integer,\ java.lang.Boolean)
comment19.text=\ Creates\ a\ point\ and\ then\ connects\ to\ previous\ point\ created\ if\ dimension\ flags\ are\ set\ (or\ implied)\n\t@param\ x\ x\ coordinate\n\t@param\ y\ y\ coordinate\n\t@param\ z\ z\ coordinate\n\t@param\ s\ label\ for\ point\n\t@param\ c\ colour\ for\ line\n\t@param\ linetype\ code\ for\ kind\ of\ line\ ..\ SOLID,\ DASH1,\ DASH2\n\t@param\ split\ divide\ node\ into\ two\ nodes\n
comment2.params=x\ y\ z
comment2.target=Model3D(float,\ float,\ float)
comment20.params=x\ y\ z
comment20.target=void\ connectPoint(float,\ float,\ float)
comment21.params=x\ y\ z\ c
comment21.target=void\ connectPoint(float,\ float,\ float,\ java.awt.Color)
comment22.params=x\ y\ z\ s\ c
comment22.target=void\ connectPoint(float,\ float,\ float,\ java.lang.String,\ java.awt.Color)
comment23.params=x\ y\ z\ line
comment23.target=void\ connectPoint(float,\ float,\ float,\ java.lang.Integer)
comment24.params=x\ y\ z\ s\ line
comment24.target=void\ connectPoint(float,\ float,\ float,\ java.lang.String,\ java.lang.Integer)
comment25.params=x\ y\ z
comment25.target=void\ setOrigin(float,\ float,\ float)
comment26.params=x\ y\ z
comment26.target=void\ translate(float,\ float,\ float)
comment27.params=
comment27.target=float[]\ getOrigin()
comment27.text=\ Returns\ origin\ of\ 3d\ matrix\n\t@return\ float[3]\ --\ x,\ y,\ z\n
comment28.params=x\ y\ z
comment28.target=int\ addVert(float,\ float,\ float)
comment28.text=\ Add\ a\ vertex\ to\ this\ model\n\t@return\ the\ vertice\ reference\n
comment29.params=p1\ p2
comment29.target=void\ add(int,\ int)
comment29.text=\ Add\ a\ line\ from\ vertex\ p1\ to\ vertex\ p2\n\t@param\ p1\ vertice\ index\ for\ point\ 1\n\t@param\ p2\ vertice\ index\ for\ point\ 2\n
comment3.params=flag
comment3.target=Model3D\ setDim1Flag(boolean)
comment30.params=p1\ p2\ c\ line\ split
comment30.target=void\ add(int,\ int,\ java.awt.Color,\ java.lang.Integer,\ java.lang.Boolean)
comment30.text=\ Add\ a\ line\ from\ vertex\ p1\ to\ vertex\ p2\n\t@param\ p1\ vertice\ index\ for\ point\ 1\n\t@param\ p2\ vertice\ index\ for\ point\ 2\n\t@param\ p2\ vertice\ index\ for\ point\ 2\n\t@param\ c\ colour\ index\ for\ line\n\t@param\ linetype\ code\ for\ kind\ of\ line\ ..\ SOLID,\ DASH\n\t@param\ split\ god\ knows\n
comment31.params=x\ y\ z
comment31.target=void\ addAxes(float,\ float,\ float)
comment31.text=\ Initialise\ the\ axes\n\t@param\ x\ x\ axis\ magnitude\n\t@param\ y\ y\ axis\ magnitude\n\t@param\ z\ z\ axis\ magnitude\n
comment32.params=
comment32.target=void\ transform()
comment32.text=Transform\ all\ the\ points\ in\ this\ model
comment33.params=a\ left\ right
comment33.target=void\ quickSort(int[],\ int,\ int)
comment33.text=\ Quick\ Sort\ implementation\n
comment34.params=a\ i\ j
comment34.target=void\ swap(int[],\ int,\ int)
comment35.params=
comment35.target=void\ compress()
comment35.text=eliminate\ duplicate\ lines
comment36.params=g
comment36.target=void\ paint1(java.awt.Graphics)
comment36.text=\ Paint\ this\ model\ to\ a\ graphics\ context.\ \ It\ uses\ the\ matrix\ associated\n\twith\ this\ model\ to\ map\ from\ model\ space\ to\ screen\ space.\n\tThe\ next\ version\ of\ the\ browser\ should\ have\ double\ buffering,\nwhich\ will\ make\ this\ *much*\ nicer
comment37.params=g
comment37.target=void\ paint0(java.awt.Graphics)
comment38.params=g\ x\ y\ aType
comment38.target=void\ drawArcArrow(java.awt.Graphics,\ int,\ int,\ java.lang.Integer)
comment39.params=x1\ y1\ x2\ y2
comment39.target=double\ cos(int,\ int,\ int,\ int)
comment4.params=flag
comment4.target=Model3D\ setDim2Flag(boolean)
comment40.params=x1\ y1\ x2\ y2
comment40.target=double\ sin(int,\ int,\ int,\ int)
comment41.params=g\ x1\ y1\ x2\ y2\ aType
comment41.target=void\ drawArrow(java.awt.Graphics,\ int,\ int,\ int,\ int,\ java.lang.Integer)
comment42.params=aType
comment42.target=int\ setArcDashLength(java.lang.Integer)
comment43.params=len\ aType
comment43.target=double\ setDashLength(double,\ java.lang.Integer)
comment44.params=aType
comment44.target=int\ setArcDashSpace(java.lang.Integer)
comment45.params=len\ aType
comment45.target=double\ setDashSpace(double,\ java.lang.Integer)
comment46.params=g\ x1\ y1\ x2\ y2
comment46.target=void\ drawArrowBarbs(java.awt.Graphics,\ int,\ int,\ int,\ int)
comment47.params=g\ x1\ y1\ x2\ y2\ dashlength\ spacelength
comment47.target=void\ drawDashedLine(java.awt.Graphics,\ int,\ int,\ int,\ int,\ double,\ double)
comment48.params=g\ x1\ y1\ d1\ d2\ arcangle\ arc\ dashlength\ dashspace
comment48.target=void\ drawDashedArc(java.awt.Graphics,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment49.params=g\ iCode
comment49.target=void\ setColor(java.awt.Graphics,\ int)
comment5.params=flag
comment5.target=Model3D\ setDim3Flag(boolean)
comment50.params=g\ s\ x\ y
comment50.target=int\ drawColorLabel(java.awt.Graphics,\ java.lang.String,\ int,\ int)
comment51.params=g
comment51.target=void\ paint0xx(java.awt.Graphics)
comment52.params=g
comment52.target=void\ paint2(java.awt.Graphics)
comment53.params=g
comment53.target=void\ paint(java.awt.Graphics)
comment54.params=
comment54.target=void\ findBB()
comment54.text=Find\ the\ bounding\ box\ of\ this\ model
comment55.params=w\ h
comment55.target=void\ setSize(int,\ int)
comment56.params=
comment56.target=void\ setMatBounds()
comment6.params=flag
comment6.target=void\ setLabelFlag(boolean)
comment7.params=s
comment7.target=void\ setLabel(java.lang.String)
comment8.params=n
comment8.target=void\ setNvert(int)
comment9.params=n
comment9.target=void\ setNcon(int)
numComments=57
