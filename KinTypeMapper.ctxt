#BlueJ class context
comment0.target=KinTypeMapper
comment0.text=\r\n\ <p>Title\:\ </p>\r\n\ <p>Description\:\ </p>\r\n\ <p>Copyright\:\ Copyright\ (c)\ 2002</p>\r\n\ <p>Company\:\ </p>\r\n\ @author\ unascribed\r\n\ @version\ 1.0\r\n
comment1.params=x
comment1.target=void\ setSerialNumber(long)
comment10.params=col
comment10.target=java.util.Vector\ toData(java.util.Vector)
comment11.params=r
comment11.target=java.lang.String\ head(java.lang.String)
comment12.params=
comment12.target=java.util.Vector\ toColumnNames()
comment13.params=cly
comment13.target=boolean\ buildAllPaths(CayleyTable)
comment13.text=\ procedure\ for\ construction\ kin\ type\ product\ paths\ and\ converting\r\n\ paths\ to\ algebra\ elements\r\n
comment14.params=cly\ sex
comment14.target=boolean\ buildAllPaths(CayleyTable,\ java.lang.String)
comment15.params=cpi
comment15.target=AlgebraKinType\ alg2Kin(CayleyPathInfo)
comment16.params=ap
comment16.target=java.lang.String\ algPath2Kin(AlgebraSymbolVector)
comment17.params=g\ sex
comment17.target=java.lang.String\ mapGeneratorToKinType(AlgebraSymbol,\ java.lang.String)
comment18.params=sym
comment18.target=java.lang.String\ toSym(char)
comment19.params=sb
comment19.target=ListVector\ toListVector(java.lang.StringBuffer)
comment2.params=
comment2.target=long\ getSerialNumber()
comment20.params=sb
comment20.target=ListVector\ toListVector(java.lang.String)
comment21.params=sb
comment21.target=StringVector\ toStringVector(java.lang.String)
comment22.params=sb
comment22.target=java.lang.String\ toSymString(java.lang.StringBuffer)
comment23.params=sb
comment23.target=java.lang.String\ toSymString(java.lang.String)
comment24.params=
comment24.target=void\ setArrays()
comment25.params=logen\ higen\ ncoll\ naffinal\ wander\ sex
comment25.target=void\ buildInterestingPaths(int,\ int,\ int,\ int,\ int,\ java.lang.String)
comment26.params=symbol\ status\ logen\ higen\ ncoll\ naffinal\ wander
comment26.target=void\ buildInterestingPaths(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment26.text=\ public\ void\ buildInterestingPathsY(int\ logen,\ int\ higen,\ int\ ncoll,\ int\ naffinal,\ int\ wander,\ String\ sex)\ {\r\n\t\tinterestingPaths.clear();\r\n\t\tbuildInterestingPaths(0,0,logen,\ higen,\ ncoll,\ naffinal,\ wander);\r\n}
comment27.params=sy
comment27.target=boolean\ isGen(char)
comment27.text=\tpublic\ int\ lookupSymXX(String\ s)\ {\r\n\t\t//for\ (int\ i\=0;i<syms.length;i++)\ dwr\ 7-17\r\n\t\tfor\ (int\ i\=nEgo;i<syms.length;i++)\r\n\t\tif\ (syms[i].equals(s))\ return\ i;\r\n\t\treturn\ -1;\r\n}
comment28.params=sy
comment28.target=ListVector\ kintype2Gen(char)
comment29.params=
comment29.target=void\ buildArrowsex2Path()
comment3.params=
comment3.target=boolean\ hasPath()
comment30.params=sex
comment30.target=void\ addFocalElementSym2Gen(java.lang.String)
comment31.params=kts
comment31.target=void\ buildSym2Gen(java.lang.String[])
comment32.params=ret\ down
comment32.target=ListVector\ addToRet(ListVector,\ AlgebraSymbol)
comment33.params=a
comment33.target=void\ _makeProd(AlgebraSymbol)
comment34.params=a\ ktsv\ clear
comment34.target=void\ _makeProd(AlgebraSymbol,\ StringVector,\ boolean)
comment35.params=ktsv
comment35.target=void\ modifyZeroPaSibProducts(StringVector)
comment36.params=ktsv
comment36.target=void\ initAlgProds(StringVector)
comment37.params=as\ sym\ ktsv
comment37.target=void\ _addProd(AlgebraSymbol,\ int,\ StringVector)
comment38.params=ktsv
comment38.target=void\ initExtraAlgProds(StringVector)
comment39.params=ktsv
comment39.target=ListVector\ kts2Alg(StringVector)
comment4.params=
comment4.target=KinTypeMapper()
comment40.params=s
comment40.target=java.lang.String\ alg2KinTerm(java.lang.String)
comment41.params=lv
comment41.target=void\ modifyKinTypeProducts(ListVector)
comment5.params=p\ km
comment5.target=KinTypeMapper(CayleyTable,\ KinTermMap)
comment6.params=theString\ remove
comment6.target=java.lang.String\ removeString(java.lang.String,\ java.lang.String)
comment7.params=theString\ after\ insert
comment7.target=java.lang.String\ insertString(java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.params=theString\ replace\ by
comment8.target=java.lang.String\ replaceString(java.lang.String,\ java.lang.String,\ java.lang.String)
comment9.params=theString\ replace\ by
comment9.target=java.lang.String\ replaceTheString(java.lang.String,\ java.lang.String,\ java.lang.String)
numComments=42
