/*
	A basic extension of the java.awt.Frame class
 */

//import symantec.itools.awt.*;
import ice.htmlbrowser.Browser;
import ice.htmlbrowser.ICEBrowser;
import java.awt.*;

public class HelpFrame extends Frame
{
	public HelpFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(new BorderLayout(0,0));
		setVisible(false);
		setSize(781,600);
		setCursor(new Cursor(Cursor.HAND_CURSOR));
		panel1 = new java.awt.Panel();
		panel1.setLayout(null);
		panel1.setBounds(0,0,781,59);
		add("North", panel1);
		dismissButton = new java.awt.Button();
		dismissButton.setLabel("Dismiss");
		dismissButton.setBounds(629,11,66,34);
		panel1.add(dismissButton);
		backButton = new ImageButton();
		try {
			backButton.setResourceURL("KaesHelp/backarrow.gif");
			// backButton.setImageURL(RelativeURL.getURL("KaesHelp/backarrow.gif"));
		}
		catch (Exception error) { }
		backButton.setBounds(36,10,44,44);
		panel1.add(backButton);
		label1 = new java.awt.Label("Help Window",Label.CENTER);
		label1.setBounds(233,4,279,22);
		label1.setFont(new Font("Serif", Font.PLAIN, 24));
		panel1.add(label1);
		// browser1 = new ice.htmlbrowser.Browser();
		// browser1.setDocumentTitle("");
		// browser1.setStatusString("Status +++++");
		// browser1.setBounds(0,59,781,541);
		// add("Center", browser1);
		// browser1.setCursor(new Cursor(Cursor.HAND_CURSOR));
		setTitle("Main Help");
		//}}

		//{{INIT_MENUS
		mainMenuBar = new java.awt.MenuBar();
		menu1 = new java.awt.Menu("File");
		miNew = new java.awt.MenuItem("New");
		miNew.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_N,false));
		menu1.add(miNew);
		miOpen = new java.awt.MenuItem("Open...");
		miOpen.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_O,false));
		menu1.add(miOpen);
		miSave = new java.awt.MenuItem("Save");
		miSave.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_S,false));
		menu1.add(miSave);
		miSaveAs = new java.awt.MenuItem("Save As...");
		menu1.add(miSaveAs);
		menu1.addSeparator();
		miExit = new java.awt.MenuItem("Exit");
		menu1.add(miExit);
		mainMenuBar.add(menu1);
		menu2 = new java.awt.Menu("Edit");
		miCut = new java.awt.MenuItem("Cut");
		miCut.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_X,false));
		menu2.add(miCut);
		miCopy = new java.awt.MenuItem("Copy");
		miCopy.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_C,false));
		menu2.add(miCopy);
		miPaste = new java.awt.MenuItem("Paste");
		miPaste.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_V,false));
		menu2.add(miPaste);
		mainMenuBar.add(menu2);
		menu3 = new java.awt.Menu("Help");
		mainMenuBar.setHelpMenu(menu3);
		miAbout = new java.awt.MenuItem("About..");
		menu3.add(miAbout);
		menu3.addSeparator();
		helpMenuItem = new java.awt.MenuItem("Help");
		helpMenuItem.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_H,false));
		menu3.add(helpMenuItem);
		mainMenuBar.add(menu3);
		menu4 = new java.awt.Menu("Title");
		menuItem1 = new java.awt.MenuItem("Show");
		menuItem1.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_K,false));
		menu4.add(menuItem1);
		menuItem2 = new java.awt.MenuItem("Item");
		menu4.add(menuItem2);
		mainMenuBar.add(menu4);
		setMenuBar(mainMenuBar);
		//$$ mainMenuBar.move(3,3);
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		dismissButton.addActionListener(lSymAction);
		helpMenuItem.addActionListener(lSymAction);
		//}}
		mainMenuBar.add(GlobalWindowManager.windowsMenu);
		GlobalWindowManager.addWindow(this);
		try {
			String lx = System.getProperty("user.dir");
			// browser1.setDocumentBaseString("file://localhost/"+lx+"/"+"KaesHelp/");
			// browser1.setDocumentBaseString(getClass().getResource("KaesHelp").toString());
			
			// browser1.setCurrentLocation("KaesHelp/Analyze.html");
		} catch (Exception e) {e.printStackTrace();}
	}

	public HelpFrame(String title)
	{
		this();
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}
		super.setVisible(b);
	}

	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.Panel panel1;
	java.awt.Button dismissButton;
	ImageButton backButton;
	java.awt.Label label1;
	// ice.htmlbrowser.Browser browser1;
	//}}

	//{{DECLARE_MENUS
	java.awt.MenuBar mainMenuBar;
	java.awt.Menu menu1;
	java.awt.MenuItem miNew;
	java.awt.MenuItem miOpen;
	java.awt.MenuItem miSave;
	java.awt.MenuItem miSaveAs;
	java.awt.MenuItem miExit;
	java.awt.Menu menu2;
	java.awt.MenuItem miCut;
	java.awt.MenuItem miCopy;
	java.awt.MenuItem miPaste;
	java.awt.Menu menu3;
	java.awt.MenuItem miAbout;
	java.awt.MenuItem helpMenuItem;
	java.awt.Menu menu4;
	java.awt.MenuItem menuItem1;
	java.awt.MenuItem menuItem2;
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == HelpFrame.this)
				HelpFrame_WindowClosing(event);
		}

		public void windowActivated(java.awt.event.WindowEvent event) {
			mainMenuBar.add(GlobalWindowManager.windowsMenu);
			super.windowActivated(event);
		}

	}
	
	void HelpFrame_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);		 // hide the Frame
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == dismissButton)
				dismissButton_ActionPerformed(event);
			else if (object == helpMenuItem)
				helpMenuItem_ActionPerformed(event);
		}
	}

	void dismissButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		// Hide the HelpFrame
		setVisible(false);
		//}}
	}
	
	public void doHelp(String helpItem) {
		try {
			// browser1.setCurrentLocation(helpItem+".html");
		} catch (Exception e) {e.printStackTrace();}
		show();
	}

	void helpMenuItem_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		// Request the focus
		doHelp("AddElement");
		//}}
	}
}
