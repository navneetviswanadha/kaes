/*
	A basic extension of the java.awt.Frame class
 */

import java.awt.*;

public class InputWindow extends Frame
{
	public InputWindow()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(new BorderLayout(0,0));
		setVisible(false);
		setSize(325,216);
		setFont(new Font("Serif", Font.PLAIN, 12));
		panel1 = new java.awt.Panel();
		panel1.setLayout(new BorderLayout(0,0));
		panel1.setBounds(0,0,325,0);
		add("North", panel1);
		question = new java.awt.TextArea("",0,0,TextArea.SCROLLBARS_NONE);
		question.setBounds(0,0,294,142);
		panel1.add("North", question);
		controlPanel = new java.awt.Panel();
		controlPanel.setLayout(new BorderLayout(0,0));
		controlPanel.setBounds(0,216,325,0);
		add("South", controlPanel);
		setTitle("Input");
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		//}}
	}

	public InputWindow(String title)
	{
		this();
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}
		super.setVisible(b);
	}

	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.Panel panel1;
	java.awt.TextArea question;
	java.awt.Panel controlPanel;
	//}}

	//{{DECLARE_MENUS
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == InputWindow.this)
				InputWindow_WindowClosing(event);
		}
	}
	
	void InputWindow_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);		 // hide the Frame
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
		}
	}

	
}
