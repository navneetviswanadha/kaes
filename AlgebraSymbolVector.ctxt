#BlueJ class context
comment0.target=AlgebraSymbolVector
comment0.text=\ Revision\ History\r\n\r\n\ 31/10\ MF\ Changed\ System.out.println\ to\ Debug.prout(1,M)\r\n\ 7/02\ DR\ modified\ clone\ by\ adding\ clone\ to\ getAlgebraSymbol\r\n\ 7/12\ DR\ added\ deepClone\r\n\ 7/24\ DR\ added\ "if\ (rec\ \!\=\ null)"\ test\ to\ clone\r\n\ 9/24\ DR\ corrected\ error\ in\ reciprocal()\ for\ mixed\ sex\r\n\ 9/28\ DR\ added\ reciprocal(String\ sex);\ added\ sameSex();\ added\ sameSex(String\ sex);\r\n\ 9/30\ DR\ added\ sameElements();\r\n\ ?/10\ DR\ added\ procedure\ consistentSex()\r\n\ 11/12\ DR\ added\ procedures\ sameArrowPattern,\ equivalentProduct()\r\n\ 2/9\ DR\ added\ procedure\ sameArrow(Hashtable\ ht)\r\n
comment1.params=
comment1.target=AlgebraSymbolVector()
comment10.params=
comment10.target=void\ reset()
comment11.params=
comment11.target=boolean\ isNext()
comment12.params=
comment12.target=AlgebraSymbol\ getNext()
comment13.params=
comment13.target=AlgebraSymbol\ getPrev()
comment14.params=a
comment14.target=void\ addToEnd(AlgebraSymbol)
comment15.params=a
comment15.target=void\ addToBeginning(AlgebraSymbol)
comment16.params=
comment16.target=void\ removeEnd()
comment17.params=
comment17.target=void\ removeBeginning()
comment18.params=a
comment18.target=int\ locateSymbol(AlgebraSymbol)
comment19.params=
comment19.target=AlgebraSymbolVector\ deepClone()
comment2.params=a
comment2.target=AlgebraSymbolVector(AlgebraSymbol)
comment20.params=deep
comment20.target=java.lang.Object\ clone(boolean)
comment21.params=
comment21.target=AlgebraSymbolVector\ copy()
comment22.params=
comment22.target=boolean\ sameElements()
comment22.text=\ determine\ if\ all\ elements\ in\ the\ product\ are\ the\ same\r\n
comment23.params=theSex
comment23.target=boolean\ sameSex(java.lang.String)
comment23.text=\ determine\ if\ all\ elements\ in\ product\ have\ the\ same\ sex\r\n\ @theSex\ compare\ to\ theSex\r\n\ @return\ true\ if\ all\ elements\ have\ same\ sex\ as\ theSex\r\n
comment24.params=
comment24.target=boolean\ sameSex()
comment24.text=\ determine\ if\ all\ elements\ in\ product\ have\ the\ same\ sex\r\n\ @return\ true\ if\ all\ elements\ have\ same\ sex\r\n
comment25.params=
comment25.target=boolean\ consistentSex()
comment25.text=\ determine\ if\ all\ elements\ in\ product\ have\ the\ same\ sex\ or\ neutral\ sex\r\n\ @return\ true\ if\ all\ elements\ have\ same\ sex\r\n
comment26.params=
comment26.target=ListVector\ reciprocal()
comment26.text=\ compute\ reciprocal\ this\ product\r\n\ @return\ reciprocal\ of\ the\ product\r\n
comment27.params=theSex
comment27.target=ListVector\ reciprocal(java.lang.String)
comment27.text=\ compute\ reciprocal\ this\ product,\ starting\ with\ theSex\r\n\ theSex\ sex\ acted\ on\ by\ product\r\n\ @return\ reciprocal\ of\ the\ product\r\n
comment28.params=
comment28.target=StringVector\ toStringVector()
comment29.params=
comment29.target=int\ getGeneration()
comment3.params=n
comment3.target=AlgebraSymbolVector(int)
comment30.params=asv
comment30.target=boolean\ sameArrowPattern(AlgebraSymbolVector)
comment30.text=\ test\ if\ this\ and\ asv\ have\ the\ same\ arrow\ pattern\r\n\ @asv\ test\ against\ this\r\n\ @return\ boolean\r\n
comment31.params=
comment31.target=boolean\ sameArrow()
comment31.text=\ test\ if\ this\ has\ the\ same\ arrow\ for\ all\ algebra\ symbols\r\n\ @return\ boolean\r\n
comment32.params=ht
comment32.target=boolean\ sameArrow(java.util.Hashtable)
comment33.params=
comment33.target=boolean\ equivalentProduct()
comment33.text=\r\n\ test\ to\ see\ if\ this\ has\ equivalent\ element\ form\r\n\ @return\ boolean\r\n
comment34.params=
comment34.target=AlgebraSymbolVector\ equivalentRightProduct()
comment34.text=\r\n\ get\ right\ product\ of\ an\ equivalent\ product\r\n\ @return\ right\ product\r\n
comment35.params=
comment35.target=AlgebraSymbolVector\ equivalentLeftProduct()
comment35.text=\r\n\ get\ left\ product\ of\ an\ equivalent\ product\r\n\ @return\ left\ product\r\n
comment36.params=
comment36.target=AlgebraSymbolVector\ reduce()
comment36.text=\r\n\ \ reduce\ algebra\ symbol\ vector\r\n\ \ @return\ reduced\ algebra\ symbol\ vector\r\n
comment37.params=
comment37.target=java.lang.String\ makeTransliteration()
comment37.text=\r\n\ change\ algebra\ elements\ to\ transliterated\ kin\ term\ form\r\n\ return\ transliteration\r\n
comment38.params=
comment38.target=int[]\ getArrowPattern()
comment39.params=asv
comment39.target=AlgebraSymbolVector\ makeEquivalent(AlgebraSymbolVector)
comment4.params=n\ m
comment4.target=AlgebraSymbolVector(int,\ int)
comment40.params=
comment40.target=boolean\ hasFocalElement()
comment41.params=
comment41.target=boolean\ isZeroVector()
comment5.params=i
comment5.target=AlgebraSymbol\ getSymbol(int)
comment6.params=
comment6.target=AlgebraSymbol\ getLast()
comment6.text=\tpublic\ Object\ elementAt(int\ i)\ {\r\n\r\n\t\telem\ \=\ size()-1-i;\r\n\r\n\t\treturn\ elementAt(elem);\r\n\r\n\t}\r\n\r\n
comment7.params=
comment7.target=int\ getIndex()
comment8.params=a\ n
comment8.target=void\ setSymbol(AlgebraSymbol,\ int)
comment9.params=
comment9.target=AlgebraSymbol\ getFirst()
numComments=42
