// import ice.htmlbrowser.Document;
import ice.htmlbrowser.Browser;
//import ice.htmlbrowser.ICEBrowser;
import java.awt.*;



public class MessagePanel extends java.awt.Panel
{
	//insert class definition here

	public MessagePanel()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		GridBagLayout gridBagLayout;
		gridBagLayout = new GridBagLayout();
		setLayout(gridBagLayout);
		setSize(673,625);
		setFont(new Font("SansSerif", Font.PLAIN, 12));
		messagescrollPanel = new java.awt.Panel();
		gridBagLayout = new GridBagLayout();
		messagescrollPanel.setLayout(gridBagLayout);
		messagescrollPanel.setBounds(0,0,673,189);
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 4;
		gbc.gridheight = 3;
		gbc.weightx = 0.5;
		gbc.weighty = 0.6;
		gbc.anchor = GridBagConstraints.NORTH;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)getLayout()).setConstraints(messagescrollPanel, gbc);
		add(messagescrollPanel);
		verticalScrollbar1 = new java.awt.Scrollbar(Scrollbar.VERTICAL);
		verticalScrollbar1.setBounds(657,0,16,189);
		gbc = new GridBagConstraints();
		gbc.gridx = 5;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.NORTHEAST;
		gbc.fill = GridBagConstraints.VERTICAL;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)messagescrollPanel.getLayout()).setConstraints(verticalScrollbar1, gbc);
		messagescrollPanel.add(verticalScrollbar1);
		scrollPanel = new java.awt.Panel();
		scrollPanel.setLayout(null);
		scrollPanel.setBounds(5,5,647,179);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 4;
		gbc.weighty = 0.2;
		gbc.anchor = GridBagConstraints.NORTH;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5,5,5,5);
		((GridBagLayout)messagescrollPanel.getLayout()).setConstraints(scrollPanel, gbc);
		messagescrollPanel.add(scrollPanel);
		detailText = new java.awt.TextArea("",0,0,TextArea.SCROLLBARS_NONE);
		detailText.setBounds(0,189,673,182);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 4;
		gbc.weightx = 0.5;
		gbc.weighty = 0.05;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)getLayout()).setConstraints(detailText, gbc);
		add(detailText);
		//infoPanel = new ice.htmlbrowser.Browser();
		//infoPanel.setVersion("3.03");
		//infoPanel.setBounds(5,376,663,245);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 5;
		gbc.gridwidth = 8;
		gbc.gridheight = 2;
		gbc.weightx = 0.5;
		gbc.weighty = 0.7;
		gbc.anchor = GridBagConstraints.SOUTH;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(5,5,5,5);
		((GridBagLayout)getLayout()).setConstraints(infoPanel, gbc);
		//add(infoPanel);
		//}}
		
		try {
			String lx = System.getProperty("user.dir");
			infoPanel.setDocumentBaseString(getClass().getResource("KaesHelp").toString());
			infoPanel.setCurrentLocation("KaesHelp/Start.html");
		} catch (Exception e) {e.printStackTrace();}

	
		//{{REGISTER_LISTENERS
		SymAdjustment lSymAdjustment = new SymAdjustment();
		verticalScrollbar1.addAdjustmentListener(lSymAdjustment);
		//}}
	}

	
	//{{DECLARE_CONTROLS
	java.awt.Panel messagescrollPanel;
	java.awt.Scrollbar verticalScrollbar1;
	java.awt.Panel scrollPanel;
	java.awt.TextArea detailText;
	ice.htmlbrowser.Browser infoPanel;
	//}}

	/** 
     * Adds the specified component to this container.
     * @param comp the component to be added
     */
    public Component add(Component comp) {
		java.awt.Component supersResult = super.add(comp);

		// to do: place event handler code here.
		// modify the return from the super, or return your own result

		return supersResult;
	}


	/** 
     * Paints the container.  This forwards the paint to any lightweight components 
     * that are children of this container.  If this method is reimplemented, 
     * super.paint(g) should be called so that lightweight components are properly
     * rendered.  If a child component is entirely clipped by the current clipping
     * setting in g, paint() will not be forwarded to that child.
     *
     * @param g the specified Graphics window
     * @see   java.awt.Component#update(java.awt.Graphics)
     */
    public void paint(Graphics g) {
		super.paint(g);
		//g.fillRect(0,messPanel.getSize().height+1,getSize().width,messPanel.getSize().height+7);
		// to do: place event handler code here.
	}
	
		
	public void addMessage(MessageLine m) {
		Component tc[] =  scrollPanel.getComponents();
		//messageLinePanel.removeAll();
		boolean done = false;
/*		for (int i=0;i<tc.length;i++) {
			if (tc[i] instanceof MessageLine) {
				MessageLine x = (MessageLine) tc[i];
				if (!done && x.messageRef.getMessageLevel() > m.messageRef.getMessageLevel()) {
					scrollPanel.add(m,i);
					done = true;
				}
			}
			
			//messageLinePanel.add(x);
		}
		if (!done) scrollPanel.add(m);
		*/
		
		// scrollPanel.validate();
		Component t = null;
		if (scrollPanel.getComponentCount() != 0)
			t = scrollPanel.getComponent(scrollPanel.getComponentCount()-1);
		Rectangle r;
		if (t != null) { 
			r = t.getBounds();
			m.setLocation(new Point(r.x,r.y+r.height+5));
			scrollPanel.add(m);
		} else {
			scrollPanel.add(m);
			r = m.getBounds();
		}
		
		int len = r.y+r.height/2+5;
		if (len >= scrollPanel.getSize().height) {
			verticalScrollbar1.setMaximum(len);
			verticalScrollbar1.setMinimum(r.height/2);
			verticalScrollbar1.setUnitIncrement(r.height+5);
			verticalScrollbar1.enable(true);
		} else {
			//verticalScrollbar1.enable(false);
		}
		//scrollPanel.getGraphics().translate(0,300);
		scrollPanel.validate();
		System.out.println(scrollPanel.getComponentCount()+"");
		
	}
	
	public void removeMessages() {
		scrollPanel.removeAll();
	}


	class SymAdjustment implements java.awt.event.AdjustmentListener
	{
		public void adjustmentValueChanged(java.awt.event.AdjustmentEvent event)
		{
			Object object = event.getSource();
			if (object == verticalScrollbar1)
				verticalScrollbar1_AdjustmentValueChanged(event);
		}
	}

	void verticalScrollbar1_AdjustmentValueChanged(java.awt.event.AdjustmentEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		int val = verticalScrollbar1.getValue();
		Component c = scrollPanel.getComponentAt(50,val);
		if (c instanceof MessageLine) {
			MessageLine m = (MessageLine) scrollPanel.getComponentAt(50,val);
			Point p = m.getLocation();
			scrollPanel.getGraphics().translate(p.x,p.y-5);
		}
		scrollPanel.validate();
		//}}
	}
}
