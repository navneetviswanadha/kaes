#BlueJ class context
comment0.target=MakeEquivalentRule
comment1.params=
comment1.target=MakeEquivalentRule()
comment10.params=a
comment10.target=boolean\ applyRule(CayleyInfo)
comment10.text=\ rule\ modifies\ CayleyTable\ using\ equivalence\ between\ elements\r\n\ @a\ path\ to\ which\ the\ rule\ is\ to\ be\ applied\r\n\ return\ boolean\r\n
comment11.params=a
comment11.target=boolean\ applyRule(AlgebraPath)
comment12.params=a\ asv
comment12.target=AlgebraPath\ checkChildElement(CayleyInfo,\ AlgebraSymbolVector)
comment13.params=asv
comment13.target=AlgebraSymbolVector\ reduceProductPath(AlgebraSymbolVector)
comment14.params=asv
comment14.target=boolean\ tryFocalProductPath(AlgebraSymbolVector)
comment15.params=asv1\ asv2
comment15.target=AlgebraPath\ makeEquivalentPath(AlgebraSymbolVector,\ AlgebraSymbolVector)
comment16.params=eqv
comment16.target=AlgebraPath\ makeEquivalence(ListVector)
comment16.text=\tAlgebraPath\ testEquivalence(AlgebraSymbolVector\ asv)\ {\r\n\t\tfor\ (equiv.reset();equiv.isNext();){\r\n\t\t\tListVector\ eqv\ \=\ (ListVector)\ equiv.getNext();\r\n\t\t\tif\ (asv.equals((AlgebraSymbolVector)\ eqv.elementAt(0))\ ||\ asv.equals((AlgebraSymbolVector)\ eqv.elementAt(1)))\ {\r\n\t\t\t\treturn\ makeEquivalentPath(asv1,asv2);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn\ null;\r\n}
comment17.params=asv
comment17.target=ListVector\ checkForEquivalence(AlgebraSymbolVector)
comment18.params=asv
comment18.target=ListVector\ checkForReducedEquivalence(AlgebraSymbolVector)
comment2.params=flag
comment2.target=void\ setActiveRule(boolean)
comment3.params=
comment3.target=boolean\ getActiveRule()
comment4.params=as1\ as2
comment4.target=void\ setEquivalentElements(AlgebraSymbolVector,\ AlgebraSymbolVector)
comment5.params=
comment5.target=ListVector\ getEquivalentElements()
comment6.params=
comment6.target=ListVector\ getReducedEquivalentElements()
comment7.params=gen\ asv0
comment7.target=boolean\ inEquivalents(AlgebraSymbol,\ AlgebraSymbolVector)
comment8.params=a
comment8.target=boolean\ doesRuleApply(CayleyInfo)
comment9.params=a
comment9.target=boolean\ doesRuleApply(AlgebraPath)
numComments=19
